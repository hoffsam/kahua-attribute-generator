{"version":3,"file":"extension.test.js","sourceRoot":"","sources":["../../../src/test/suite/extension.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as assert from 'assert';\r\nimport * as vscode from 'vscode';\r\n\r\nsuite('Extension Test Suite', () => {\r\n\tvscode.window.showInformationMessage('Start all tests.');\r\n\r\n\ttest('Extension should be present', () => {\r\n\t\tassert.ok(vscode.extensions.getExtension('Sammy.kahua-attribute-generator'));\r\n\t});\r\n\r\n\ttest('Extension should activate', async () => {\r\n\t\tconst extension = vscode.extensions.getExtension('Sammy.kahua-attribute-generator');\r\n\t\tif (extension) {\r\n\t\t\tawait extension.activate();\r\n\t\t\tassert.ok(extension.isActive);\r\n\t\t}\r\n\t});\r\n\r\n\ttest('Commands should be registered', async () => {\r\n\t\tconst commands = await vscode.commands.getCommands(true);\r\n\t\t\r\n\t\t// Check that our main commands are registered\r\n\t\tconst expectedCommands = [\r\n\t\t\t'kahua.generateAttributesExtension',\r\n\t\t\t'kahua.generateAttributesSupplement',\r\n\t\t\t'kahua.generateSnippetAttributes',\r\n\t\t\t'kahua.generateTemplateAttributes',\r\n\t\t\t'kahua.generateLookups',\r\n\t\t\t'kahua.generateSnippetLookups',\r\n\t\t\t'kahua.generateTemplateLookups',\r\n\t\t\t'kahua.generateCustom',\r\n\t\t\t'kahua.generateSnippetCustom',\r\n\t\t\t'kahua.generateTemplateCustom'\r\n\t\t];\r\n\r\n\t\tfor (const cmd of expectedCommands) {\r\n\t\t\tassert.ok(commands.includes(cmd), `Command ${cmd} should be registered`);\r\n\t\t}\r\n\t});\r\n\r\n\ttest('Configuration should have expected properties', () => {\r\n\t\tconst config = vscode.workspace.getConfiguration('kahua');\r\n\t\t\r\n\t\t// Test that configuration properties exist\r\n\t\tassert.ok(config.has('showInContextMenu'));\r\n\t\tassert.ok(config.has('outputTarget'));\r\n\t\tassert.ok(config.has('suppressInvalidConditionWarnings'));\r\n\t\tassert.ok(config.has('showSnippetsInMenu'));\r\n\t\tassert.ok(config.has('showTemplatesInMenu'));\r\n\t\tassert.ok(config.has('tokenNameDefinitions'));\r\n\t\tassert.ok(config.has('fragmentDefinitions'));\r\n\t\tassert.ok(config.has('menuOptions'));\r\n\t});\r\n\r\n\ttest('Default configuration should have expected values', () => {\r\n\t\tconst config = vscode.workspace.getConfiguration('kahua');\r\n\t\t\r\n\t\t// Test default values\r\n\t\tassert.strictEqual(config.get('showInContextMenu'), true);\r\n\t\tassert.strictEqual(config.get('outputTarget'), 'newEditor');\r\n\t\tassert.strictEqual(config.get('suppressInvalidConditionWarnings'), false);\r\n\t\tassert.strictEqual(config.get('showSnippetsInMenu'), true);\r\n\t\tassert.strictEqual(config.get('showTemplatesInMenu'), true);\r\n\t\t\r\n\t\t// Test that arrays have expected structure\r\n\t\tconst tokenDefs = config.get('tokenNameDefinitions') as any[];\r\n\t\tassert.ok(Array.isArray(tokenDefs));\r\n\t\tassert.ok(tokenDefs.length > 0);\r\n\t\t\r\n\t\tconst fragmentDefs = config.get('fragmentDefinitions') as any[];\r\n\t\tassert.ok(Array.isArray(fragmentDefs));\r\n\t\tassert.ok(fragmentDefs.length > 0);\r\n\t\t\r\n\t\tconst menuOptions = config.get('menuOptions') as any[];\r\n\t\tassert.ok(Array.isArray(menuOptions));\r\n\t\tassert.ok(menuOptions.length > 0);\r\n\t});\r\n});"]}