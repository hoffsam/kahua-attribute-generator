{
  "name": "kahua-attribute-generator",
  "displayName": "Kahua Attribute Generator",
  "description": "Generate XML for Kahua AppDefs : attributes, labels, DataTags, Data Store Columns, FieldDefs, etc from selected lines of comma seperated values.",
  "version": "1.8.0",
  "publisher": "Sammy",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "scripts": {
    "compile": "tsc -p .",
    "watch": "tsc -watch -p .",
    "package": "vsce package",
    "build": "npm run compile && vsce package",
    "build-clean": "rimraf out && npm run compile && vsce package"
  },
  "devDependencies": {
    "@types/vscode": "^1.85.0",
    "typescript": "^5.4.0"
  },
  "activationEvents": [
    "onCommand:kahua.createExtensionAttributes",
    "onCommand:kahua.createSupplementAttributes",
    "onCommand:kahua.insertTokenTemplate",
    "onCommand:kahua.insertTokenSnippet"
  ],
  "contributes": {
    "menus": {
      "commandPalette": [
        {
          "command": "kahua.createExtensionAttributes"
        },
        {
          "command": "kahua.createSupplementAttributes"
        },
        {
          "command": "kahua.insertTokenTemplate"
        },
        {
          "command": "kahua.insertTokenSnippet"
        }
      ],
      "editor/context": [
        {
          "submenu": "kahua.submenu",
          "when": "config.kahua.showInContextMenu",
          "group": "navigation"
        }
      ],
      "kahua.submenu": [
        {
          "command": "kahua.createExtensionAttributes"
        },
        {
          "command": "kahua.createSupplementAttributes"
        },
        {
          "command": "kahua.insertTokenTemplate"
        },
        {
          "command": "kahua.insertTokenSnippet"
        }
      ]
    },
    "submenus": [
      {
        "id": "kahua.submenu",
        "label": "Kahua"
      }
    ],
    "commands": [
      {
        "command": "kahua.createExtensionAttributes",
        "title": "Kahua: Generate Extension Attributes from Selection"
      },
      {
        "command": "kahua.createSupplementAttributes",
        "title": "Kahua: Generate Supplement Attributes from Selection"
      },
      {
        "command": "kahua.insertTokenTemplate",
        "title": "Kahua: Insert Token Template"
      },
      {
        "command": "kahua.insertTokenSnippet",
        "title": "Kahua: Insert Token Snippet"
      }
    ],
    "keybindings": [
      {
        "command": "kahua.createExtensionAttributes",
        "key": "ctrl+alt+e",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "command": "kahua.createSupplementAttributes",
        "key": "ctrl+alt+s",
        "when": "editorTextFocus && editorHasSelection"
      }
    ],
    "configuration": {
      "title": "Kahua Attribute Generator",
      "properties": {
        "kahua.showInContextMenu": {
          "type": "boolean",
          "default": true,
          "description": "Show Kahua generator commands in the editor right-click context menu."
        },
        "kahua.outputTarget": {
          "type": "string",
          "enum": [
            "clipboard",
            "newEditor"
          ],
          "enumDescriptions": [
            "Copy generated XML to clipboard",
            "Open generated XML in a new editor window"
          ],
          "default": "newEditor",
          "description": "Choose where to output the generated XML."
        },
        "kahua.suppressInvalidConditionWarnings": {
          "type": "boolean",
          "default": false,
          "description": "Suppress error notifications when conditional expressions reference tokens that don't exist or have no value."
        },
        
        "kahua.tokenNames": {
          "type": "string",
          "default": "name,type,entity:Field,visualtype:TextBox,label,descriptionlabel,linkedEntityDef",
          "description": "Comma-separated list of token names that can be used in fragments. Format: 'name,prefix,type' or 'name,prefix:DefaultValue,type:Text' to specify default values. Defaults are used when input values are not provided."
        },
        "kahua.fragments": {
          "type": "object",
          "default": {
            "Attributes": "<Attribute Name=\"{$name}\" Label=\"[{$entity}_{$name}Label]\" Description=\"[{$entity}_{$name}Description]\" DataType=\"{$type}\" {$type=='Lookup' ? 'LookupListName=\"{$entity}_{$name}LookupList\"' : ''} {$type=='entity' ? 'LinkedEntityDef=\"{$linkedEntityDef}\"' : ''}IsConfigurable=\"true\" />",
            "Labels": "<Label Key=\"{$entity}_{$name}Label\">{$label!='' ? $label:fiendly : $name:friendly}</Label>\n<Label Key=\"{$entity}_{$name}Description\">{$descriptionlabel!='' ? $descriptionlabel : $name:friendly}</Label>",
            "DataTags": "<DataTag Name=\"{$entity}_{$name}\" Key=\"{$entity}_{$name}\" Label=\"[{$entity}_{$name}Label]\" CultureLabelKey=\"{$entity}_{$name}Label\">\n  <Key />\n</DataTag>",
            "Fields": "<Field Attribute=\"{$name}\" />",
            "FieldDefs": "<FieldDef Name=\"{$name}\" Path=\"{$name}\" DataTag=\"{$entity}_{$name}\" Edit.Path=\"{$name}\" />",
            "DataStore": "<Column AttributeName=\"{$name}\" />",
            "LogFields": "<Field FieldDef=\"{$name}\" />",
            "ImportDefs": "<Column AttributeName=\"{$name}\" Name=\"{$name:friendly}\" />",
            "Visuals": "<TextBlock Name=\"{$name}\" DataTag=\"{$entity}_{$name}\" Path=\"{$name}\" />\n<{$visualtype} Name=\"{$name}\" DataTag=\"{$entity}_{$name}\" Path=\"{$name}\" {$type=='Lookup' ? 'List=\"{$entity}_{$name}LookupList\"' : ''} />",
            "{$type=='Lookup' ? 'LookupList' : ''}": "<LookupList Name=\"{$name}\" />\n<Value />"
          },
          "description": "Fragment templates for generating Kahua XML. Add, remove, or customize output fragments. Tokens support whitespace control: {$token} or {$token:internal} (default, trimmed) vs {$token:friendly} (preserves whitespace). Supports conditional blocks with syntax: {$condition ? 'value' : 'fallback'}."
        }
      }
    }
  },
  "repository": {
    "type": "git",
    "url": "https://example.com/your/kahua-attribute-generator.git"
  },
  "license": "MIT"
}
